<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-3.1.xsd
	   		">
	   		
	<!-- 启用注解 -->
	<context:annotation-config />
	
	<!-- 扫描注解Bean -->
	<context:component-scan base-package="com.md">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 读取配置文件内容 -->
	<!-- <context:property-placeholder location="classpath:conf/properties/project.properties" /> -->
	
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	   <property name="locations">
	      <list>
	         <value>classpath:conf/properties/project.properties</value>
	      </list>
	   </property>
	</bean>
	<bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	   <property name="properties" ref="configProperties" />
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
  			              destroy-method="close">
		  <property name="driverClass" value="${mySql.driverClassName}" />
		  <property name="jdbcUrl" value="${mySql.jdbc.url}" />
		  <property name="user" value="${mySql.jdbc.username}" />
		  <property name="password" value="${mySql.jdbc.password}" />
		  <!-- 指定连接数据库连接池的最小连接数 -->
		  <property name="minPoolSize" value="10" />
		  <!-- 指定连接数据库连接池的最大连接数 -->
		  <property name="maxPoolSize" value="30" />
		  <!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		  <property name="maxIdleTime" value="1800" />
		  <property name="acquireIncrement" value="2" />
		  <property name="maxStatements" value="0" />
		  <!-- 指定连接数据库连接池的初始化连接数 -->
		  <property name="initialPoolSize" value="2" />
		  <property name="idleConnectionTestPeriod" value="1800" />
		  <property name="acquireRetryAttempts" value="30" />
		  <property name="breakAfterAcquireFailure" value="true" />
		  <property name="testConnectionOnCheckout" value="false" />
	</bean>
		
    <!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis/sqlmap-config.xml" />
		<!-- mapper和resultmap配置路径  自动扫描entity目录，省略Configuration.xml里手工配置-->
		<property name="mapperLocations" value="classpath:conf/mybatis/mapper/*.xml"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
		<property name="basePackage" value="com.md.mapper" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
	</bean>
    
    <!-- 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物  也可以用拦截式事物配置-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 拦截器配置 -->
	<!-- <bean  
        class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >  
        <property name="interceptors">  
           <list>  
              <ref bean="loginInterceptor"/>  
           </list>  
        </property>  
    </bean> 
    
    <bean id="loginInterceptor" class="com.md.interceptor.LoginInterceptor">  
       <property name="mappingURL" value=".*"/>  
       <property name="mappingURL" value=".*md/diagnose/queryDiagnoseData*"/>  
       
    </bean>   -->
    
    
 
     	
</beans>